{"version":3,"sources":["components/asyncComponent/async.js","redux/store.js","components/Wrapper.js","redux/utilities/mapping-functions.js","App.js","serviceWorker.js","index.js"],"names":["asyncComponent","getComponent","AsyncComponent","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","Component","inherits","createClass","key","value","_this2","then","setState","react_default","a","createElement","props","store","createStore","undefined","sessionLength","breakLength","play","interval","time","action","type","Label","__webpack_require__","e","bind","module","default","Clock","requestInterval","require","Wrapper","handlePlay","assertThisInitialized","handleRefresh","switchBreakState","animate","stopAnimation","genTime","startTimer","incSession","decSession","incBreak","decBreak","$","toggleClass","updatePlay","clear","audioBeep","pause","updateInterval","seconds","split","minutes","regex","text","promise","document","querySelector","_","catch","error","test","updateTime","removeClass","addClass","updateSession","updateBreak","css","_this3","class","id","onClick","preload","src","ref","audio","className","increment","decrement","React","connect","dispatch","mapModule","bool","App","es","components_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fda5840f.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\n//function to async import react components\nexport default function asyncComponent(getComponent) {\n    class AsyncComponent extends Component {\n        static Component = null;\n        state = { Component: AsyncComponent.Component };\n\n        componentWillMount() {\n            if (!this.state.Component) {\n                getComponent().then(Component => {\n                    AsyncComponent.Component = Component\n                    this.setState({ Component })\n                })\n            }\n        }\n        render() {\n            const { Component } = this.state\n            if (Component) {\n                return <Component {...this.props} />\n            }\n            return null\n        }\n    }\n    return AsyncComponent;\n}\n","import {createStore} from 'redux'\n\n\nconst UPDATE_SESSION_LENGTH = 'UPDATE_SESSION_LENGTH';\nconst UPDATE_BREAK_LENGTH = 'UPDATE_BREAK_LENGTH';\nconst UPDATE_PLAY_STATE = 'UPDATE_PLAY_STATE';\nconst UPDATE_INTERVAL = 'UPDATE_INTERVAL';\nconst UPDATE_TIME = 'UPDATE_TIME';\n\n\n//redux action creators_____________________________________________\nexport const updateSessionLength = (length) => {\n  return {\n   type: UPDATE_SESSION_LENGTH,\n   sessionLength: length\n  };\n};\n\nexport const updateBreakLength = (length) => {\n  return {\n   type: UPDATE_BREAK_LENGTH,\n   breakLength: length\n  };\n};\n\nexport const updatePlayState = (bool) => {\n  return {\n   type: UPDATE_PLAY_STATE,\n   play: bool\n  };\n};\n\nexport const updateInterval = (id) => {\n  return {\n   type: UPDATE_INTERVAL,\n   interval: id\n  };\n};\n\nexport const updateTime = (time) => {\n  return {\n   type: UPDATE_TIME,\n   time: time\n  };\n};\n//--------------------------------------------------------------------\n\n\n//redux reducer function_____________________________________________\nconst reducer = (state = {sessionLength: 25, breakLength: 5, play: false, interval: null, time: '25:00'}, action) => {\n  switch(action.type){\n    case UPDATE_SESSION_LENGTH : return {sessionLength: action.sessionLength, breakLength: state.breakLength, play: state.play, interval: state.interval, time: state.time};\n    case UPDATE_BREAK_LENGTH : return {breakLength: action.breakLength, sessionLength: state.sessionLength, play: state.play, interval: state.interval, time: state.time};\n    case UPDATE_PLAY_STATE : return {play: action.play, breakLength: state.breakLength, sessionLength: state.sessionLength, interval: state.interval, time: state.time};\n    case UPDATE_INTERVAL : return {interval: action.interval, play: state.play, breakLength: state.breakLength, sessionLength: state.sessionLength, time: state.time};\n    case UPDATE_TIME : return {time: action.time, interval: state.interval, play: state.play, breakLength: state.breakLength, sessionLength: state.sessionLength};\n    default: return state;\n  };\n};\n//----------------------------------------------------------------\n\n\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react'\nimport $ from 'jquery'\nimport asyncComponent from './asyncComponent/async';\nimport {connect} from 'react-redux'\nimport {mapStateToProps} from '../redux/utilities/mapping-functions'\nimport {mapDispatchToProps} from '../redux/utilities/mapping-functions'\nimport '../sass/02-utilities/_animation.scss';\nimport '@fortawesome/fontawesome-free/css/all.css'\n\n//dynamic import\nconst Label = asyncComponent(() =>\n    \t    import('./Label').then(module => module.default)\n    \t);\n\n\nconst Clock = asyncComponent(() =>\n         import('./Clock').then(module => module.default)\n    );\n\n\nvar requestInterval = require('request-interval');\n\n\nclass Wrapper extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      time: '25:00',\n      play: false,\n      sessionLength: 25,\n      breakLength: 5,\n      interval: null\n    }\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.switchBreakState = false;\n    this.animate =  this.animate.bind(this);\n    this.stopAnimation = this.stopAnimation.bind(this);\n    this.genTime = this.genTime.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.incSession = this.incSession.bind(this);\n    this.decSession = this.decSession.bind(this);\n    this.incBreak = this.incBreak.bind(this);\n    this.decBreak = this.decBreak.bind(this);\n  }\n\n//start - stop the timer\n  handlePlay(){\n    $('#play').toggleClass('fa-play');\n    $('#play').toggleClass('fa-pause');\n    this.props.updatePlay(!this.props.play);\n    if(!this.props.play){\n      this.props.updateInterval(this.startTimer());\n    }\n    else{\n      requestInterval.clear(this.props.interval);\n      this.audioBeep.pause();\n    }\n  }\n\n\nstartTimer(){\n  return  requestInterval(1000, function() {\n             var seconds = this.props.time.split(':')[1];\n             var minutes = this.props.time.split(':')[0];\n             var regex = /^\\d{2}$/;\n             if(minutes == 0 && seconds == 0){\n                requestInterval.clear(this.props.interval);\n                this.switchBreakState = !this.switchBreakState;\n                minutes = (this.switchBreakState) ? this.props.breakLength : this.props.sessionLength;\n                this.switchBreakState ? $('#text').text('BREAK') : $('#text').text('SESSION');\n                this.props.updateInterval(this.startTimer());\n             }\n             else if(seconds != 0){\n                  seconds = seconds - 1;\n            }else{\n                  seconds = 59;\n                  minutes = minutes -1;\n            }\n\n            (minutes == 0) ? this.animate() : this.stopAnimation();\n            //this.audioBeep.currentTime = 0;\n            var promise = document.querySelector('audio').play();\n               if (promise !== undefined) {\n                  promise.then(_ => {\n                  (minutes == 0 && seconds <= 5) ? this.audioBeep.play() : this.audioBeep.pause();\n               }).catch(error => {\n                 // Autoplay was prevented.\n              });\n            }\n            if(regex.test(seconds)){\n               var time =  (regex.test(minutes)) ? this.genTime(minutes, seconds) : this.genTime('0' + minutes, seconds);\n            }else {\n                time =  (regex.test(minutes)) ? this.genTime(minutes,'0' + seconds) : this.genTime('0' + minutes,'0' + seconds);\n            }\n           this.props.updateTime(time);\n            }.bind(this));\n  }\n\nhandleRefresh(){\n  $('#text').text('SESSION');\n  $('.fa-pause').removeClass('fa-pause').addClass('fa-play', 200);\n  this.stopAnimation();\n  requestInterval.clear(this.props.interval);\n  this.props.updateTime('25:00');\n  this.props.updatePlay(false);\n  this.props.updateSession(25);\n  this.props.updateBreak(5);\n  this.switchBreakState = false;\n}\n\n\nanimate(){\n  $('.clock').css('border', '4px solid #013235');\n  $('.clock').css('box-shadow', '0px 3px 5px #FF6D00 inset');\n}\n\nstopAnimation(){\n    $('.clock').css('border', '4px solid #0d252d');\n    $('.clock').css('box-shadow', '0px 3px 5px rgba(244, 244, 244, 0.3) inset');\n    this.audioBeep.pause();\n}\n\ngenTime(minutes, seconds) {\n    var time = '' + minutes + ':' + seconds;\n    return time;\n}\n\nincSession(){\n  if(this.props.sessionLength < 60){\n  var time = (this.props.sessionLength + 1) + ':00';\n  this.props.updateSession(this.props.sessionLength + 1);\n  if(!this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\ndecSession(){\n  if(this.props.sessionLength > 0){\n  var time = (this.props.sessionLength - 1) + ':00';\n  this.props.updateSession(this.props.sessionLength - 1);\n  if(!this.switchBreakState){\n     this.props.updateTime(time);\n  }\n }\n}\n\nincBreak(){\n  if(this.props.breakLength < 60){\n  var time = (this.props.breakLength + 1) + ':00';\n  this.props.updateBreak(this.props.breakLength + 1);\n  if(this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\ndecBreak(){\n  if(this.props.breakLength > 0){\n  var time = (this.props.breakLength - 1) + ':00';\n  this.props.updateBreak(this.props.breakLength - 1);\n  if(this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\n  render() {\n    return (\n      <div class='back'>\n        <i id='play' class='fa fa-play' onClick={this.handlePlay}></i>\n        <Clock time={this.props.time} onClick={this.handleRefresh}/>\n        <audio id=\"beep\" preload=\"auto\"\n         src=\"https://goo.gl/65cBl1\"\n         ref={(audio) => { this.audioBeep = audio; }} />\n        <div className='wrap-label'>\n        <Label id='session-label' text='SESSION LENGTH' length={this.props.sessionLength} increment={this.incSession} decrement={this.decSession}/>\n        <Label id='break-label' text='BREAK LENGTH' length={this.props.breakLength} increment={this.incBreak} decrement={this.decBreak}/>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Wrapper) ;\n","import * as mapModule from '../store'\n\n//mapping state and props to Redux to manage state-------\nexport  const mapStateToProps = (state)  => {\n  return {\n    sessionLength : state.sessionLength,\n    breakLength: state.breakLength,\n    play: state.play,\n    interval: state.interval,\n    time: state.time\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    updateSession : function(length) {\n        dispatch(mapModule.updateSessionLength(length));\n    },\n    updateBreak : function(length) {\n        dispatch(mapModule.updateBreakLength(length));\n    },\n    updatePlay : function(bool) {\n        dispatch(mapModule.updatePlayState(bool));\n    },\n    updateInterval : function(id) {\n        dispatch(mapModule.updateInterval(id));\n    },\n    updateTime : function(time) {\n        dispatch(mapModule.updateTime(time));\n    }\n  };\n};\n","import React from 'react';\nimport Wrapper from './components/Wrapper.js'\nimport { Provider } from 'react-redux'\nimport store from './redux/store.js'\nimport './App.scss';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Provider store={store}>\n        <Wrapper />\n       </Provider>\n    )\n  }\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'babel-polyfill';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}