{"version":3,"sources":["components/Label/Label.js","components/Clock/Clock.js","components/Wrapper.js","redux/store.js","App.js","redux/utilities/mapping-functions.js","serviceWorker.js","index.js"],"names":["Label","react_default","a","createElement","id","this","props","className","text","onClick","increment","index_es","icon","faPlus","length","decrement","faMinus","React","Component","Clock","forwardRef","ref","animClass","time","faSyncAlt","requestInterval","require","Wrapper","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handlePlay","bind","assertThisInitialized","handleRefresh","switchBreakState","animate","stopAnimation","genTime","startTimer","genTimer","checkAndPlayAudio","incSession","decSession","incBreak","decBreak","header","createRef","faPlay","faPause","updatePlay","play","clear","interval","audioBeep","pause","updateInterval","regex","timer","minutes","seconds","test","updateTime","current","split","breakLength","sessionLength","textContent","_this2","promise","undefined","currentTime","then","catch","error","console","log","updateSession","updateBreak","toggleAnim","_this3","Clock_Clock","toggleAnimClass","preload","src","audio","components_Label_Label","store","createStore","state","arguments","action","type","Container","connect","dispatch","mapModule","bool","App","es","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a1a1df08.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlus, faMinus} from '@fortawesome/free-solid-svg-icons'\n\nclass Label extends React.Component {\n    render() {\n      return (\n        <div id={this.props.id} className='label'>\n        <p className='head'>{this.props.text}</p>\n        <hr className='line' />\n        <div className='inline'>\n        <div className='wrap-plus inc' onClick={this.props.increment}><FontAwesomeIcon icon={faPlus}/></div>\n        <p className='length'>{this.props.length}</p>\n        <div className='wrap-minus dec' onClick={this.props.decrement}><FontAwesomeIcon icon={faMinus}/></div>\n        </div>\n      </div>\n      );\n    }\n}\n\nexport default Label;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSyncAlt} from '@fortawesome/free-solid-svg-icons'\n\nconst Clock = React.forwardRef((props, ref) => (\n  <div className={\"clock \" + props.animClass} >\n    <p ref={ref} id='text'>SESSION</p>\n    <time id='time'>{props.time}</time>\n    <FontAwesomeIcon className='refresh' icon={faSyncAlt} onClick={props.onClick}/>\n  </div>\n));\n\nexport default Clock;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPause} from '@fortawesome/free-solid-svg-icons'\nimport Label from './Label/Label'\nimport Clock from './Clock/Clock'\n\n\nvar requestInterval = require('request-interval');\n\n\nclass Wrapper extends React.Component {\n  constructor(props){\n    super(props);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.switchBreakState = false;\n    this.animate =  this.animate.bind(this);\n    this.stopAnimation = this.stopAnimation.bind(this);\n    this.genTime = this.genTime.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.genTimer = this.genTimer.bind(this);\n    this.checkAndPlayAudio = this.checkAndPlayAudio.bind(this);\n    this.incSession = this.incSession.bind(this);\n    this.decSession = this.decSession.bind(this);\n    this.incBreak = this.incBreak.bind(this);\n    this.decBreak = this.decBreak.bind(this);\n    this.header = React.createRef();\n    this.icon = faPlay;\n  }\n\n//start - stop the timer\n  handlePlay(){\n    this.icon = (this.icon === faPlay) ? faPause : faPlay; //toggle FontAwesomeIcon\n    this.props.updatePlay(!this.props.play); // update boolean state with redux\n    if(!this.props.play){\n      this.props.updateInterval(this.startTimer()); //initiate the timer\n    }\n    else{\n      requestInterval.clear(this.props.interval); //stop timer\n      this.audioBeep.pause(); //stop audio if playing\n    }\n  }\n\n\nstartTimer(){\n  return  requestInterval(1000, function() {\n             var regex = /^\\d{2}$/;\n             var timer = this.genTimer();\n             var minutes = timer.minutes;\n             var seconds = timer.seconds;\n            //animate when less than 1 minute\n            (minutes == 0) ? this.animate() : this.stopAnimation();\n            this.checkAndPlayAudio(minutes, seconds);\n\n            if(regex.test(seconds)){\n               var time =  (regex.test(minutes)) ? this.genTime(minutes, seconds) : this.genTime('0' + minutes, seconds); // if minutes are single digit append 0 to start\n            }else {//if seconds are single digit append 0 to start\n                time =  (regex.test(minutes)) ? this.genTime(minutes,'0' + seconds) : this.genTime('0' + minutes,'0' + seconds);\n            }\n           this.props.updateTime(time);\n            }.bind(this));\n  }\n\ngenTimer(){\n  var header = this.header.current;\n  var seconds = this.props.time.split(':')[1];\n  var minutes = this.props.time.split(':')[0];\n  if(minutes == 0 && seconds == 0){\n     requestInterval.clear(this.props.interval);\n     this.switchBreakState = !this.switchBreakState;\n     minutes = (this.switchBreakState) ? this.props.breakLength : this.props.sessionLength;\n     header.textContent = (this.switchBreakState) ?  'BREAK' : 'SESSION';\n     this.props.updateInterval(this.startTimer());\n  }\n  else if(seconds != 0){\n       seconds = seconds - 1;\n }else{\n       seconds = 59;\n       minutes = minutes -1;\n }\n return {minutes: minutes, seconds: seconds};\n}\n\n\ncheckAndPlayAudio(minutes, seconds){\n  var promise = this.audioBeep.play();\n     if (promise !== undefined) {\n        this.audioBeep.currentTime = 0;\n        promise.then(() => {\n        (minutes == 0 && seconds <= 5) ? this.audioBeep.play() : this.audioBeep.pause();\n        }).catch(error => {\n          // Autoplay was prevented.\n           console.log('Autoplay not supported by browser');\n         });\n     }\n }\n\n\nhandleRefresh(){\n  this.header.current.textContent = 'SESSION';\n  this.icon = faPlay;\n  this.stopAnimation();\n  if(this.props.interval){\n    requestInterval.clear(this.props.interval);\n  }\n  this.props.updateTime('25:00');\n  this.props.updatePlay(false);\n  this.props.updateSession(25);\n  this.props.updateBreak(5);\n  this.switchBreakState = false;\n}\n\n\nanimate(){\n  this.props.toggleAnim('animate');\n}\n\nstopAnimation(){\n  this.props.toggleAnim('stopAnimation');\n  this.audioBeep.pause();\n}\n\ngenTime(minutes, seconds) {\n    var time = '' + minutes + ':' + seconds;\n    return time;\n}\n\nincSession(){\n  if(this.props.sessionLength < 60){\n  var time = (this.props.sessionLength + 1) + ':00';\n  this.props.updateSession(this.props.sessionLength + 1);\n  if(!this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\ndecSession(){\n  if(this.props.sessionLength > 0){\n  var time = (this.props.sessionLength - 1) + ':00';\n  this.props.updateSession(this.props.sessionLength - 1);\n  if(!this.switchBreakState){\n     this.props.updateTime(time);\n  }\n }\n}\n\nincBreak(){\n  if(this.props.breakLength < 60){\n  var time = (this.props.breakLength + 1) + ':00';\n  this.props.updateBreak(this.props.breakLength + 1);\n  if(this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\ndecBreak(){\n  if(this.props.breakLength > 0){\n  var time = (this.props.breakLength - 1) + ':00';\n  this.props.updateBreak(this.props.breakLength - 1);\n  if(this.switchBreakState){\n    this.props.updateTime(time);\n  }\n }\n}\n\n  render() {\n    return (\n      <div className='back'>\n        <FontAwesomeIcon id='play' icon={this.icon} onClick={this.handlePlay}/>\n        <Clock ref={this.header} time={this.props.time} onClick={this.handleRefresh} animClass={this.props.toggleAnimClass}/>\n        <audio id=\"beep\" preload=\"auto\" src=\"https://goo.gl/65cBl1\" ref={(audio) => { this.audioBeep = audio; }} />\n        <div className='wrap-label'>\n        <Label id='session-label' text='SESSION LENGTH' length={this.props.sessionLength} increment={this.incSession} decrement={this.decSession}/>\n        <Label id='break-label' text='BREAK LENGTH' length={this.props.breakLength} increment={this.incBreak} decrement={this.decBreak}/>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Wrapper ;\n","import {createStore} from 'redux'\n\n\nconst UPDATE_SESSION_LENGTH = 'UPDATE_SESSION_LENGTH';\nconst UPDATE_BREAK_LENGTH = 'UPDATE_BREAK_LENGTH';\nconst UPDATE_PLAY_STATE = 'UPDATE_PLAY_STATE';\nconst UPDATE_INTERVAL = 'UPDATE_INTERVAL';\nconst UPDATE_TIME = 'UPDATE_TIME';\nconst TOGGLE_ANIM = 'TOGGLE_ANIM';\n\n\n//redux action creators_____________________________________________\nexport const updateSessionLength = (length) => {\n  return {\n   type: UPDATE_SESSION_LENGTH,\n   sessionLength: length\n  };\n};\n\nexport const updateBreakLength = (length) => {\n  return {\n   type: UPDATE_BREAK_LENGTH,\n   breakLength: length\n  };\n};\n\nexport const updatePlayState = (bool) => {\n  return {\n   type: UPDATE_PLAY_STATE,\n   play: bool\n  };\n};\n\nexport const updateItInterval = (id) => {\n  return {\n   type: UPDATE_INTERVAL,\n   interval: id\n  };\n};\n\nexport const updateTime = (time) => {\n  return {\n   type: UPDATE_TIME,\n   time: time\n  };\n};\n\nexport const toggleAnim = (className) => {\n  return {\n   type: TOGGLE_ANIM,\n   toggleAnimClass: className\n  };\n};\n//--------------------------------------------------------------------\n\n\n//redux reducer function_____________________________________________\nconst reducer = (state = {sessionLength: 25, breakLength: 5, play: false, interval: null, time: '25:00', toggleAnimClass: ''}, action) => {\n  switch(action.type){\n    case UPDATE_SESSION_LENGTH : return {sessionLength: action.sessionLength, breakLength: state.breakLength, play: state.play, interval: state.interval, time: state.time, toggleAnimClass: state.toggleAnimClass};\n    case UPDATE_BREAK_LENGTH : return {breakLength: action.breakLength, sessionLength: state.sessionLength, play: state.play, interval: state.interval, time: state.time, toggleAnimClass: state.toggleAnimClass};\n    case UPDATE_PLAY_STATE : return {play: action.play, breakLength: state.breakLength, sessionLength: state.sessionLength, interval: state.interval, time: state.time, toggleAnimClass: state.toggleAnimClass};\n    case UPDATE_INTERVAL : return {interval: action.interval, play: state.play, breakLength: state.breakLength, sessionLength: state.sessionLength, time: state.time, toggleAnimClass: state.toggleAnimClass};\n    case UPDATE_TIME : return {time: action.time, interval: state.interval, play: state.play, breakLength: state.breakLength, sessionLength: state.sessionLength, toggleAnimClass: state.toggleAnimClass};\n    case TOGGLE_ANIM : return {toggleAnimClass: action.toggleAnimClass, time: state.time, interval: state.interval, play: state.play, breakLength: state.breakLength, sessionLength: state.sessionLength};\n    default: return state;\n  };\n};\n//----------------------------------------------------------------\n\n\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport Wrapper from './components/Wrapper.js'\nimport { Provider, connect } from 'react-redux'\nimport store from './redux/store.js'\nimport {mapStateToProps} from './redux/utilities/mapping-functions'\nimport {mapDispatchToProps} from './redux/utilities/mapping-functions'\nimport './App.scss';\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Wrapper);\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Provider store={store}>\n        <Container />\n       </Provider>\n    )\n  }\n}\n\nexport default App;\n","import * as mapModule from '../store'\n\n//mapping state and props to Redux to manage state-------\nexport  const mapStateToProps = (state)  => {\n  return {\n    sessionLength : state.sessionLength,\n    breakLength: state.breakLength,\n    play: state.play,\n    interval: state.interval,\n    time: state.time,\n    toggleAnimClass: state.toggleAnimClass\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    updateSession : function(length) {\n        dispatch(mapModule.updateSessionLength(length));\n    },\n    updateBreak : function(length) {\n        dispatch(mapModule.updateBreakLength(length));\n    },\n    updatePlay : function(bool) {\n        dispatch(mapModule.updatePlayState(bool));\n    },\n    updateInterval : function(id) {\n        dispatch(mapModule.updateItInterval(id));\n    },\n    updateTime : function(time) {\n        dispatch(mapModule.updateTime(time));\n    },\n    toggleAnim : function(className) {\n        dispatch(mapModule.toggleAnim(className));\n    }\n  };\n};\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'babel-polyfill';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}