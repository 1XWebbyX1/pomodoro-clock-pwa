{"version":3,"sources":["components/asyncComponent/async.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["asyncComponent","getComponent","AsyncComponent","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","Component","inherits","createClass","key","value","_this2","then","setState","react_default","a","createElement","props","Label","__webpack_require__","e","bind","module","default","Clock","requestInterval","require","Wrapper","time","play","sessionLength","breakLength","interval","handlePlay","assertThisInitialized","handleRefresh","switchBreakState","animate","stopAnimation","genTime","startTimer","incSession","decSession","incBreak","decBreak","$","toggleClass","prevState","clear","seconds","split","minutes","regex","text","test","removeClass","addClass","css","class","id","onClick","className","increment","decrement","React","App","components_Wrapper","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.32758bda.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\n\n//function to async import react components\nexport default function asyncComponent(getComponent) {\n    class AsyncComponent extends Component {\n        static Component = null;\n        state = { Component: AsyncComponent.Component };\n\n        componentWillMount() {\n            if (!this.state.Component) {\n                getComponent().then(Component => {\n                    AsyncComponent.Component = Component\n                    this.setState({ Component })\n                })\n            }\n        }\n        render() {\n            const { Component } = this.state\n            if (Component) {\n                return <Component {...this.props} />\n            }\n            return null\n        }\n    }\n    return AsyncComponent;\n}\n","import React from 'react'\nimport $ from 'jquery'\nimport asyncComponent from './asyncComponent/async';\n//import Label from './Label'\n//import Clock from './Clock'\nimport '../sass/02-utilities/_animation.scss';\n//import {connect} from 'react-redux'\nimport '@fortawesome/fontawesome-free/css/all.css'\n\n//dynamic import\nconst Label = asyncComponent(() =>\n    \t    import('./Label').then(module => module.default)\n    \t);\n\n\nconst Clock = asyncComponent(() =>\n         import('./Clock').then(module => module.default)\n    );\n\n\nvar requestInterval = require('request-interval');\n\n\nclass Wrapper extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      time: '25:00',\n      play: true,\n      sessionLength: 25,\n      breakLength: 5,\n      interval: null\n    }\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleRefresh = this.handleRefresh.bind(this);\n    this.switchBreakState = false;\n    this.animate =  this.animate.bind(this);\n    this.stopAnimation = this.stopAnimation.bind(this);\n    this.genTime = this.genTime.bind(this);\n    this.startTimer = this.startTimer.bind(this);\n    this.incSession = this.incSession.bind(this);\n    this.decSession = this.decSession.bind(this);\n    this.incBreak = this.incBreak.bind(this);\n    this.decBreak = this.decBreak.bind(this);\n  }\n\n//start - stop the timer\n  handlePlay(){\n    $('#play').toggleClass('fa-play');\n    $('#play').toggleClass('fa-pause');\n    this.setState(function(prevState, props){\n      return {play: !prevState.play}\n   });\n    if(this.state.play){\n      this.setState({interval: this.startTimer()});\n    }\n    else{\n      requestInterval.clear(this.state.interval);\n    }\n  }\n\n\nstartTimer(){\n  return  requestInterval(1000, function() {\n             var seconds = this.state.time.split(':')[1];\n             var minutes = this.state.time.split(':')[0];\n             var regex = /^\\d{2}$/;\n             if(minutes == 0 && seconds == 0){\n                requestInterval.clear(this.state.interval);\n                this.switchBreakState = !this.switchBreakState;\n                minutes = (this.switchBreakState) ? this.state.breakLength : this.state.sessionLength;\n                this.switchBreakState ? $('#text').text('BREAK') : $('#text').text('SESSION');\n                this.setState({interval: this.startTimer()});\n             }\n             else if(seconds != 0){\n                  seconds = seconds - 1;\n            }else{\n                  seconds = 59;\n                  minutes = minutes -1;\n            }\n\n            (minutes == 0) ? this.animate() : this.stopAnimation();\n            if(regex.test(seconds)){\n               var time =  regex.test(minutes) ? this.genTime(minutes, seconds) : this.genTime('0' + minutes, seconds);\n            }else {\n               var time =  regex.test(minutes) ? this.genTime(minutes,'0' + seconds) : this.genTime('0' + minutes,'0' + seconds);\n            }\n            this.setState({time: time});\n            }.bind(this));\n  }\n\nhandleRefresh(){\n  $('#text').text('SESSION');\n  $('.fa-pause').removeClass('fa-pause').addClass('fa-play', 200);\n  this.stopAnimation();\n  requestInterval.clear(this.state.interval);\n  this.setState({time: '25:00'});\n}\n\n\nanimate(){\n  $('.clock').css('border', '4px solid #013235');\n  $('.clock').css('box-shadow', '0px 3px 5px #FF6D00 inset');\n}\n\nstopAnimation(){\n    $('.clock').css('border', '4px solid #0d252d');\n    $('.clock').css('box-shadow', '0px 3px 5px rgba(244, 244, 244, 0.3) inset');\n}\n\ngenTime(minutes, seconds) {\n    var time = '' + minutes + ':' + seconds;\n    return time;\n}\n\nincSession(){\n  if(this.state.sessionLength < 60){\n  var time = (this.state.sessionLength + 1) + ':00';\n  this.setState({sessionLength: this.state.sessionLength + 1});\n  if(!this.switchBreakState){\n    this.setState({time: time});\n  }\n }\n}\n\ndecSession(){\n  if(this.state.sessionLength > 0){\n  var time = (this.state.sessionLength - 1) + ':00';\n  this.setState({sessionLength: this.state.sessionLength - 1});\n  if(!this.switchBreakState){\n    this.setState({time: time});\n  }\n }\n}\n\nincBreak(){\n  if(this.state.breakLength < 60){\n  var time = (this.state.breakLength + 1) + ':00';\n  this.setState({breakLength: this.state.breakLength + 1});\n  if(this.switchBreakState){\n    this.setState({time: time});\n  }\n }\n}\n\ndecBreak(){\n  if(this.state.breakLength > 0){\n  var time = (this.state.breakLength - 1) + ':00';\n  this.setState({breakLength: this.state.breakLength - 1});\n  if(this.switchBreakState){\n    this.setState({time: time});\n  }\n }\n}\n\n  render() {\n    return (\n      <div class='back'>\n        <i id='play' class='fa fa-play' onClick={this.handlePlay}></i>\n        <Clock time={this.state.time} onClick={this.handleRefresh}/>\n        <div className='wrap-label'>\n        <Label id='session-label' text='SESSION LENGTH' length={this.state.sessionLength} increment={this.incSession} decrement={this.decSession}/>\n        <Label id='break-label' text='BREAK LENGTH' length={this.state.breakLength} increment={this.incBreak} decrement={this.decBreak}/>\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default Wrapper ;\n","import React, { Component } from 'react';\nimport Wrapper from './components/Wrapper.js'\nimport './App.scss';\n\nclass App extends React.Component{\n  render(){\n    return(\n      <Wrapper />\n    )\n  }\n}\n\nexport default App;\n","\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}